return {
	-- "hrsh7th/nvim-cmp",
	-- event = "InsertEnter",
	-- dependencies = {
	-- 	"saadparwaiz1/cmp_luasnip",
	--    "hrsh7th/cmp-nvim-lsp",
	-- 	"hrsh7th/cmp-nvim-lsp",
	-- 	"hrsh7th/cmp-buffer",
	-- 	"hrsh7th/cmp-path",
	-- 	"luckasRanarison/tailwind-tools.nvim",
	-- 	{ -- actual luasnip
	-- 		"L3MON4D3/LuaSnip",
	-- 		version = "v2.*",
	-- 		build = "make install_jsregexp",
	-- 		dependencies = {
	-- 			"rafamadriz/friendly-snippets",
	-- 		},
	-- 	},
	-- 	"onsails/lspkind.nvim",
	-- },
	-- config = function()
	-- 	local cmp = require("cmp")
	-- 	local lspkind = require("lspkind")
	--
	-- 	local luasnip = require("luasnip")
	-- 	luasnip.filetype_extend("typescriptreact", { "html" })
	--
	-- 	require("luasnip/loaders/from_vscode").lazy_load()
	--
	-- 	cmp.setup({
	-- 		formatting = {
	-- 			format = lspkind.cmp_format({
	-- 				before = require("tailwind-tools.cmp").lspkind_format,
	-- 				mode = "symbol", -- show only symbol annotations
	-- 				maxwidth = 50, -- prevent the popup from showing more than provided characters (e.g 50 will not show more than 50 characters)
	-- 				-- can also be a function to dynamically calculate max width such as
	-- 				-- maxwidth = function() return math.floor(0.45 * vim.o.columns) end,
	-- 				ellipsis_char = "...", -- when popup menu exceed maxwidth, the truncated part would show ellipsis_char instead (must define maxwidth first)
	-- 				show_labelDetails = true, -- show labelDetails in menu. Disabled by default
	-- 			}),
	-- 		},
	-- 		snippet = {
	-- 			expand = function(args)
	-- 				require("luasnip").lsp_expand(args.body)
	-- 			end,
	-- 		},
	-- 		window = {
	-- 			completion = cmp.config.window.bordered(),
	-- 			documentation = cmp.config.window.bordered(),
	-- 		},
	-- 		mapping = cmp.mapping.preset.insert({
	-- 			["<Tab>"] = cmp.mapping.select_next_item({ behavior = cmp.SelectBehavior.Insert }),
	-- 			["<S-Tab>"] = cmp.mapping.select_prev_item({ behavior = cmp.SelectBehavior.Insert }),
	-- 			["<C-b>"] = cmp.mapping.scroll_docs(-4),
	-- 			["<C-f>"] = cmp.mapping.scroll_docs(4),
	-- 			["<C-Space>"] = cmp.mapping.complete(),
	-- 			["<C-e>"] = cmp.mapping.abort(),
	-- 			["<CR>"] = cmp.mapping.confirm({ select = true }), -- Accept currently selected item. Set `select` to `false` to only confirm explicitly selected items.
	-- 		}),
	-- 		sources = {
	-- 			{ name = "nvim_lsp" },
	-- 			{ name = "luasnip" },
	-- 			{ name = "buffer" },
	-- 			{ name = "nvim_lua" },
	-- 			{ name = "path" },
	-- 		},
	-- 		performance = {
	-- 			debounce = 0,
	-- 			throttle = 0,
	-- 		},
	-- 	})
	-- end,
}
